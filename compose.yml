name: 'sae4-docker-stack'

services:
  nginx:
    build:
      context: .
      dockerfile: ./build/nginx/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-nginx
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    volumes:
      - type: bind
        source: ./sae4api 
        target: /app/sae4api
    depends_on:
      - sae4api
    ports:
      - 8000:80
    networks:
      - network
  sae4api:
    build:
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
        USER_NAME: ${USER_NAME:-0}
        GROUP_NAME: ${GROUP_NAME:-0}
      context: .
      dockerfile: ./build/sae4api/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-sae4api
    container_name: ${COMPOSE_PROJECT_NAME}-sae4api
    volumes:
      - type: bind
        source: ./sae4api 
        target: /app/sae4api 
    #command: sh -c 'composer install --no-interaction --optimize-autoloader && php-fpm'
    depends_on:
      - database
    networks:
      - network
  sae4app:
    build:
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
        USER_NAME: ${USER_NAME:-0}
        GROUP_NAME: ${GROUP_NAME:-0}
      context: .
      dockerfile: ./build/sae4app/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-sae4app
    volumes:
      - ./sae4app:/app
    command: sh -c 'npm install && npm start'
    ports:
      - 3000:3000
    networks:
      - network
  database:
    build:
      context: .
      dockerfile: ./build/database/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-database
    container_name: ${COMPOSE_PROJECT_NAME}-database
    ports:
      - 3306:3306
    volumes:
      - type: volume
        source: database-volume
        target: /var/lib/mysql
    environment:
      MYSQL_DATABASE: dbsae4api
      MYSQL_ROOT_PASSWORD: dbsae4api
      MYSQL_USER: api
      MYSQL_PASSWORD: api
    networks:
      - network

networks:
  network:
    name : ${COMPOSE_PROJECT_NAME}-network
    driver: bridge

volumes:
  database-volume:
    driver: local
